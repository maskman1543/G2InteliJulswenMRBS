@model IEnumerable<ASI.Basecode.Services.ServiceModels.UserViewModel>

@{
    ViewData["Title"] = "UserManagement";

    Pager pager = new Pager();

    int pageNo = 0;
    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}

<div class="list-container">
    <!-- Linking stylesheets -->
    <link href="~/css/dashboards.css" rel="stylesheet" />


    <!-- Heading and Add User button -->
    <div class="header d-flex align-items-center mb-3">
        <h1 class="title">User List</h1>
        <div class="search-bar">
            <div class="mb-3">
                <input type="text" id="searchUserInput" class="form-control" placeholder="Search users..." />
            </div>
        </div>
        <button class="btn" id="loadCreateUserModal" style="background-color: #FFDBB5; color: black;">
            <i class="fas fa-user-plus"></i> Add User
        </button>
    </div>

    <div id="userModalContainer"></div>

    <!-- User List Table -->
    <div class="list-table">
        <div class="table-header-3">
            <span>Username</span>
            <span>Name</span>
            <span>Role</span>
            <span>Actions</span>
        </div>

        <div class="table-body-3">
            @if (Model != null && Model.Any())
            {
                foreach (var item in Model)
                {
                    <div class="table-row-3">
                        <span>@item.UserId</span>
                        <span>@item.Name</span>
                        <span>@item.Roles</span> 
                        <div class="actions-2">
                            <!-- Edit Button -->
                            <button type="button" class="btn btn-warning loadEditUserModal" data-id="@item.Id">
                                <i class="fas fa-pencil"></i> Edit
                            </button>

                            <!-- Delete Button -->
                            <button type="button" class="btn btn-danger loadDeleteUserModal" data-id="@item.Id">
                                <i class="fa-solid fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="no-item text-center">No users found.</div>
            }
        </div>
        <div class="pagination">
            @if (pager.TotalPages > 0)
            {
                <ul class="pagination justify-content-end">
                    @if(pager.CurrentPage > 1){
                        <li class="page-item">
                            <a class="page-link" asp-controller="User" asp-action="UserManagement" asp-route-pg="1">First</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" asp-controller="User" asp-action="UserManagement" asp-route-pg="@(pager.CurrentPage - 1)">Previous</a>
                        </li>
                    }

                    @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
                    {
                        <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-controller="User" asp-action="UserManagement" asp-route-pg="@pge">@pge</a>
                        </li>
                    }
                    @if (pager.CurrentPage < pager.TotalPages)
                    {
                        <li class="page-Item">
                            <a class="page-link" asp-controller="User" asp-action="UserManagement" asp-route-pg="@(pager.CurrentPage + 1)">Next</a>
                        </li>
                        <li>
                            <a class="page-link" asp-controller="User" asp-action="UserManagement" asp-route-pg="@(pager.TotalPages)">Last</a>
                        </li>
                    }
                </ul>
                
            }
        </div>
    </div>
</div>


@section scripts {
    <script>
        $(document).ready(function () {
            // Handle search input event with debounce
            $('#searchUserInput').on('input', function () {
                const searchTerm = $(this).val(); // Get the search term
                const currentPage = '@ViewBag.Pager.CurrentPage'; // Get the current page number

                // If the search term is empty, reload the page with no search term
                if (searchTerm === '') {
                    window.location.href = `/User/UserManagement?pg=${currentPage}`; // Reload the page with the current page and no search term
                    return; // Exit the function to avoid further AJAX call
                }

                // Perform the AJAX request when search term is not empty
                $.ajax({
                    url: '/User/SearchUser', // Your search endpoint
                    type: 'GET',
                    data: { term: searchTerm }, // Send the search term to the server
                    success: function (data) {
                        const tbody = $('.table-body'); // Select the table body to update
                        tbody.empty(); // Clear the current table content

                        // Check if there are results
                        if (data && data.length > 0) {
                            // Loop through each user and append it to the table
                            data.forEach(function (item) {
                                const row = `
                                    <div class="table-row">
                                        <span>${item.userId}</span>
                                        <span>${item.name}</span>
                                        <span>${item.roles}</span>
                                                <div class="actions">
                                    <!-- Edit Button -->
                                            <button type="button" class="btn btn-warning loadEditUserModal" data-id="${item.id}">
                                        <i class="fas fa-pencil"></i> Edit
                                    </button>

                                    <!-- Delete Button -->
                                            <button type="button" class="btn btn-danger loadDeleteUserModal" data-id="${item.id}">
                                        <i class="fa-solid fa-trash"></i> Delete
                                    </button>
                                </div>
                                    </div>
                                `;
                                tbody.append(row);
                            });
                        } else {
                            tbody.append('<div class="no-item">No users found.</div>');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Search error:', error);
                        const tbody = $('.table-body');
                        tbody.empty();
                        tbody.append('<div class="no-item">Error occurred while searching</div>');
                    }
                });
            });
        });



        // Load the Modals
        $("#loadCreateUserModal").click(function () {
            $.get('@Url.Action("CreateUserModal", "User")', function (data) {
                $("#userModalContainer").html(data);
                $("#createUserModal").modal("show");
            });
        });

        $(document).on("click", ".loadEditUserModal", function () {
            var id = $(this).data("id"); // Primary key ID
            $.get('@Url.Action("EditUserModal", "User")', { id: id }, function (data) {
                $("#userModalContainer").html(data);
                $("#editUserModal").modal("show");
            });
        });

        $(document).on("click", ".loadDeleteUserModal", function () {
            var id = $(this).data("id"); // Get the user ID from the button
            $.get('@Url.Action("DeleteUserModal", "User")', { id: id }, function (data) {
                $("#userModalContainer").html(data); // Load the modal content
                $('#deleteUserModal').modal('show'); // Show the modal
            });
        });

        // AJAX Form submission for Create User
        $(document).on("submit", "#createUserForm", function (event) {
            event.preventDefault();

            var password = $('#password').val();
            var confirmPassword = $('#confirmpassword').val();

            // Check if passwords match
            if (password !== confirmPassword) {
                toastr.error("Passwords do not match.");
                return; // Prevent form submission if passwords do not match
            }

            $.ajax({
                url: '@Url.Action("Create", "User")',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message); // Show success message
                        $('#createUserModal').modal('hide');
                        location.reload(); // Reload the page or update the user list dynamically
                    } else {
                        toastr.error(response.message); // Show error message if response indicates failure
                    }
                },
                error: function () {
                    toastr.error("An unexpected error occurred.");
                }
            });
        });

        // AJAX form submission for Edit User
        $(document).on("submit", "#editUserForm", function (event) {
            event.preventDefault();

            $.ajax({
                url: '@Url.Action("Edit", "User")',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#editUserModal').modal('hide');
                        location.reload(); // or update the user list dynamically
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error("An unexpected error occurred.");
                }
            });
        });

        // AJAX form submission for Delete User
        $(document).on("submit", "#deleteUserForm", function (event) {
            event.preventDefault(); // Prevent the default form submission

            $.ajax({
                url: '@Url.Action("SoftDelete", "User")', // Soft delete action
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message); // Show success message
                        $('#deleteUserModal').modal('hide'); // Hide the modal
                        location.reload(); // Refresh the page or update the list dynamically
                    } else {
                        toastr.error(response.message); // Show error message
                    }
                },
                error: function () {
                    toastr.error("An unexpected error occurred.");
                }
            });
        });



        // Display success/error messages from TempData if available
        var successMessage = '@TempData["SuccessMessage"]';
        if (successMessage) {
            toastr.success(successMessage);
        }
        var errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            toastr.error(errorMessage);
        }
    </script>
}