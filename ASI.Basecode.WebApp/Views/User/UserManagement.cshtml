@model IEnumerable<ASI.Basecode.Services.ServiceModels.UserViewModel>

@{
    ViewData["Title"] = "UserManagement";
}

<div class="list-container">
    <!-- Linking stylesheets -->
    <link href="~/css/dashboards.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <!-- Heading and Add User button -->
    <div class="header d-flex align-items-center mb-3">
        <h1 class="title">User List</h1>
        <div class="search-bar">
            <div class="mb-3">
                <input type="text" id="searchUserInput" class="form-control" placeholder="Search users..." />
            </div>
            <button class="search-button">
                <i class="fas fa-search"></i>
            </button>
        </div>
        <button class="btn btn-add" id="loadCreateUserModal">
            <i class="fas fa-user-plus"></i> Add User
        </button>
    </div>

    <!-- Placeholder for the modal content -->
    <div id="modalContainer"></div>

    <!-- User List Table -->
    <div class="list-table">
        <div class="table-header">
            <span>Username</span>
            <span>Name</span>
            <span>Role</span>
            <span>Actions</span>
        </div>

        <div class="table-body">
            @if (Model != null && Model.Any())
            {
                foreach (var item in Model)
                {
                    <div class="table-row">
                        <span>@item.UserId</span>
                        <span>@item.Name</span>
                        <span>@item.Roles</span> <!-- Ensure 'Role' is the correct property name -->
                        <div class="actions">
                            <!-- Edit Button -->
                            <button type="button" class="btn btn-warning loadEditUserModal" data-id="@item.Id">
                                <i class="fas fa-pencil"></i> Edit
                            </button>

                            <!-- Delete Button -->
                            <button type="button" class="btn btn-danger loadDeleteUserModal" data-id="@item.Id">
                                <i class="fa-solid fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="no-item text-center">No users found.</div>
            }
        </div>
    </div>
</div>

@section scripts {

    

    <script>
        // Debounce function to delay execution until the user stops typing
        function debounce(func, wait) {
            let timeout;
            return function() {
                const context = this, args = arguments;
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(context, args), wait);
            };
        }
        
        // Handle search input event with debounce
        $('#searchUserInput').on('input', debounce(function () {
            const searchTerm = $(this).val(); // Get the search term

            // Perform the AJAX request
            $.ajax({
                url: '/User/SearchUser', // The endpoint where the search query will be sent
                type: 'GET',
                data: { term: searchTerm }, // Send the search term to the server
                success: function (data) {
                    const tbody = $('.table-body'); // Select the table body to update

                    tbody.empty(); // Clear the current table content

                    // Check if there are results
                    if (data && data.length > 0) {
                        // Loop through each room and append it to the table
                        data.forEach(function (item) {
                            const row = `
                                <div class="table-row">
                                    <span>${item.UserId || ''}</span>
                                    <span>${item.Name}</span>
                                    <span>${item.Roles || ''}</span>
                                    <div class="actions">
                                        <button type="button" class="btn btn-warning loadEditUserModal" data-id="${item.id}">
                                            <i class="fas fa-pencil"></i> Edit
                                        </button>
                                        <button type="button" class="btn btn-danger loadDeleteUserModal" data-id="${item.id}">
                                            <i class="fa-solid fa-trash"></i> Delete
                                        </button>
                                    </div>
                                </div>
                            `;
                            tbody.append(row);
                        });
                    } else {
                        tbody.append('<div class="no-item">No Users found.</div>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Search error:', error);
                    const tbody = $('.table-body');
                    tbody.empty();
                    tbody.append('<div class="no-item">Error occurred while searching</div>');
                }
            });
        }, 300)); // Delay of 300ms after the user stops typing
    
        // Load the Modals
        $("#loadCreateUserModal").click(function () {
            $.get('@Url.Action("CreateUserModal", "User")', function (data) {
                $("#modalContainer").html(data);
                $("#createUserModal").modal("show");
            });
        });

        $(document).on("click", ".loadEditUserModal", function () {
            var id = $(this).data("id"); // Primary key ID
            $.get('@Url.Action("EditUserModal", "User")', { id: id }, function (data) {
                $("#modalContainer").html(data);
                $("#editUserModal").modal("show");
            });
        });

        $(document).on("click", ".loadDeleteUserModal", function () {
            var id = $(this).data("id"); // Get the user ID from the button
            $.get('@Url.Action("DeleteUserModal", "User")', { id: id }, function (data) {
                $("#modalContainer").html(data); // Load the modal content
                $('#deleteUserModal').modal('show'); // Show the modal
            });
        });

        // AJAX Form submission for Create User
        $(document).on("submit", "#createUserForm", function (event) {
            event.preventDefault();

            var password = $('#password').val();
            var confirmPassword = $('#confirmpassword').val();

            // Check if passwords match
            if (password !== confirmPassword) {
                toastr.error("Passwords do not match.");
                return; // Prevent form submission if passwords do not match
            }

            $.ajax({
                url: '@Url.Action("Create", "User")',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    $('#createUserModal').modal('hide');
                    location.reload();
                },
                error: function (response) {
                    toastr.error("An error occurred while creating the user.");
                }
            });
        });

        // AJAX form submission for Edit User
        $(document).on("submit", "#editUserForm", function (event) {
            event.preventDefault();

            $.ajax({
                url: '@Url.Action("Edit", "User")',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#editUserModal').modal('hide');
                        location.reload(); // or update the user list dynamically
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error("An unexpected error occurred.");
                }
            });
        });

        // AJAX form submission for Delete User
        $(document).on("submit", "#deleteUserForm", function (event) {
            event.preventDefault(); // Prevent the default form submission

            $.ajax({
                url: '@Url.Action("SoftDelete", "User")', // Soft delete action
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message); // Show success message
                        $('#deleteUserModal').modal('hide'); // Hide the modal
                        location.reload(); // Refresh the page or update the list dynamically
                    } else {
                        toastr.error(response.message); // Show error message
                    }
                },
                error: function () {
                    toastr.error("An unexpected error occurred.");
                }
            });
        });

        

        // Display success/error messages from TempData if available
        var successMessage = '@TempData["SuccessMessage"]';
        if (successMessage) {
            toastr.success(successMessage);
        }
        var errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            toastr.error(errorMessage);
        }
    </script>
}