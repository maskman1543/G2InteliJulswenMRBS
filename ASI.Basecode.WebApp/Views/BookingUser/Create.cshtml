@model ASI.Basecode.Services.ServiceModels.BookingViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create Booking</h1>

<h4>Booking Details</h4>
<hr />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.5.0/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="~/css/modal.css" />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Purpose field -->
            <div class="form-group">
                <label asp-for="Purpose" class="control-label"></label>
                <input asp-for="Purpose" class="form-control" />
                <span asp-validation-for="Purpose" class="text-danger"></span>
            </div>

            <!-- Start Date field -->
            <div class="form-group">
                <label asp-for="StartDate" class="control-label">Start Date</label>
                <input type="date" asp-for="StartDate" class="form-control" id="startDate" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>

            <!-- Start Time field -->
            <div class="form-group">
                <label asp-for="StartTime" class="control-label">Start Time</label>
                <input type="time" asp-for="StartTime" class="form-control" id="startTime" />
                <span asp-validation-for="StartTime" class="text-danger"></span>
            </div>

            <!-- End Time field -->
            <div class="form-group">
                <label asp-for="EndTime" class="control-label">End Time</label>
                <input type="time" asp-for="EndTime" class="form-control" id="endTime" />
                <span asp-validation-for="EndTime" class="text-danger"></span>
            </div>

            
            <!-- Hidden field for RoomId -->
            <input type="hidden" asp-for="RoomId" />

            <!-- Submit button -->
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a href="@Url.Action("UserDashboard", "Home")" class="btn btn-primary">Back</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Display success message if available
        var successMessage = '@TempData["SuccessMessage3"]';
        if (successMessage) {
            toastr.success(successMessage); // Show success message using toastr
        }

        // Display error message if available
        var errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            toastr.error(errorMessage); // Show error message using toastr
        }

        // Set today's date as the default value for Start Date field
        document.getElementById('startDate').value = new Date().toISOString().split('T')[0]; // Set today's date for Start Date

        // Set default time for Start and End Time to current time
        const currentTime = new Date().toTimeString().split(' ')[0].substring(0, 5); // Get current time in HH:mm format
        document.getElementById('startTime').value = currentTime; // Set current time for Start Time
        document.getElementById('endTime').value = currentTime;   // Set current time for End Time

        // Form validation before submit
        document.querySelector("form").onsubmit = function (e) {
            var startTime = document.getElementById('startTime').value;
            var endTime = document.getElementById('endTime').value;

            // Check if StartTime is greater than EndTime
            if (startTime >= endTime) {
                e.preventDefault();  // Prevent form submission
                alert("Start Time must be earlier than End Time.");
                return false;
            }
        };
    </script>
}

<style>
    div{
        background-color: #FFF0D1;
    }
</style>