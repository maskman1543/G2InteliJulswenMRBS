@model IEnumerable<ASI.Basecode.Services.ServiceModels.RoomViewModel>

@{
    ViewData["Title"] = "RoomManagement";

    Pager pager = new Pager();

    int pageNo = 0;
    if(ViewBag.Pager != null){
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}

<link href="~/css/dashboards.css" rel="stylesheet" />

<div class="list-container">
    

    <!-- Heading and Controls -->
    <div class="header d-flex align-items-center">
        <h1 class="title">Room List</h1>
        <div class="controls">
            <div class="search-bar">
                <div class="mb-3">
                    <input type="text" id="searchRoomInput" class="form-control" placeholder="Search rooms...">
                </div>
            </div>
        </div>
        <button class="btn" id="loadCreateRoomModal" style="background-color: #FFDBB5; color: black;">
            <i class="fas fa-user-plus"></i> Add Room
        </button>
    </div>

    <!-- Placeholder for the modal content -->
    <div id="roomModalContainer"></div>

    <!-- Room List Table -->
    <div class="list-table">
        <div class="table-header">
            <span>Room Name</span>
            <span>Capacity</span>
            <span>Equipments</span>
            <span>Location</span>
            <span>Actions</span>
        </div>

        <div class="table-body">
            @if (Model != null && Model.Any())
            {
                foreach (var item in Model)
                {
                    <div class="table-row">
                        <span>@item.RoomName</span>
                        <span>@item.Capacity</span>
                        <span>@item.Equipment</span>
                        <span>@item.Location</span>

                        <div class="actions">
                            <!-- Edit Button -->
                            <button type="button" class="btn btn-warning loadEditRoomModal" data-id="@item.Id">
                                <i class="fas fa-pencil"></i> Edit
                            </button>

                            <!-- Delete Button -->
                            <button type="button" class="btn btn-danger loadDeleteRoomModal" data-id="@item.Id">
                                <i class="fa-solid fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="no-item text-center">No rooms found.</div>
            }
        </div>
        <!-- Placeholder for the modal content -->
        <div id="roomModalContainer"></div>
        <div class="pagination">
            @if(pager.TotalPages > 0)
            {
                <ul class="pagination justify-content-end">
                    @if(pager.CurrentPage > 1){
                        <li class="page-item">
                            <a class="page-link" asp-controller="Room" asp-action="RoomManagement" asp-route-pg="1">First</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" asp-controller="Room" asp-action="RoomManagement" asp-route-pg="@(pager.CurrentPage - 1)">Previouse</a>
                        </li>
                    }
                    @for(var pge = pager.StartPage; pge <= pager.EndPage; pge++)
                    {
                        <li class="page-item @(pge == pager.CurrentPage ? "active" : "")" >
                            <a class="page-link" asp-controller="Room" asp-action="RoomManagement" asp-route-pg="@pge">@pge</a>
                        </li>
                    }
                    @if (pager.CurrentPage < pager.TotalPages)
                    {
                        <li class="page-Item">
                            <a class="page-link" asp-controller="Room" asp-action="RoomManagement" asp-route-pg="@(pager.CurrentPage + 1)">Next</a>
                        </li>
                        <li>
                            <a class="page-link" asp-controller="Room" asp-action="RoomMangement" asp-route-pg="@(pager.TotalPages)">Last</a>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
</div>

@section scripts {
    
    <script>
        // Debounce function to delay execution until the user stops typing
        function debounce(func, wait) {
            let timeout;
            return function() {
                const context = this, args = arguments;
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(context, args), wait);
            };
        }

        // Handle search input event with debounce
        $('#searchRoomInput').on('input', debounce(function () {
            const searchTerm = $(this).val(); // Get the search term

            // Perform the AJAX request
            $.ajax({
                url: '/Room/SearchRoom', // The endpoint where the search query will be sent
                type: 'GET',
                data: { term: searchTerm }, // Send the search term to the server
                success: function (data) {
                    const tbody = $('.table-body'); // Select the table body to update

                    tbody.empty(); // Clear the current table content

                    // Check if there are results
                    if (data && data.length > 0) {
                        // Loop through each room and append it to the table
                        data.forEach(function (item) {
                            const row = `
                                <div class="table-row">
                                    <span>${item.roomName || ''}</span>
                                    <span>${item.capacity}</span>
                                    <span>${item.equipment || ''}</span>
                                    <span>${item.price}</span>
                                    <div class="actions">
                                        <button type="button" class="btn btn-warning loadEditRoomModal" data-id="${item.id}">
                                            <i class="fas fa-pencil"></i> Edit
                                        </button>
                                        <button type="button" class="btn btn-danger loadDeleteRoomModal" data-id="${item.id}">
                                            <i class="fa-solid fa-trash"></i> Delete
                                        </button>
                                    </div>
                                </div>
                            `;
                            tbody.append(row);
                        });
                    } else {
                        tbody.append('<div class="no-item">No rooms found.</div>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Search error:', error);
                    const tbody = $('.table-body');
                    tbody.empty();
                    tbody.append('<div class="no-item">Error occurred while searching</div>');
                }
            });
        }, 300)); // Delay of 300ms after the user stops typing


   
        // Load the Modals
        $("#loadCreateRoomModal").click(function () {
            $.get('@Url.Action("CreateRoomModal", "Room")', function (data) {
                $("#roomModalContainer").html(data);  // Load modal content into the container
                var modalElement = document.getElementById('createRoomModal');
                var modal = new bootstrap.Modal(modalElement);
                modal.show();  // Show the modal
            });
        });

        $(document).on("click", ".loadEditRoomModal", function () {
            var id = $(this).data("id"); // Get the room ID from the button
            $.get('@Url.Action("EditRoomModal", "Room")', { id: id }, function (data) {
                $("#roomModalContainer").html(data); // Load modal content into the container
                var modalElement = document.getElementById('editRoomModal');
                var modal = new bootstrap.Modal(modalElement); // Initialize the modal using Bootstrap's JS
                modal.show();  // Show the modal
            });
        });

        $(document).on("click", ".loadDeleteRoomModal", function () {
            var id = $(this).data("id"); // Get the room ID from the button
            $.get('@Url.Action("DeleteRoomModal", "Room")', { id: id }, function (data) {
                $("#roomModalContainer").html(data); // Ensure correct modal container ID
                $('#deleteRoomModal').modal('show'); // Show the modal
            });
        });

        // AJAX form submission for Create Room
        $(document).on("submit", "#createRoomForm", function (event) {
            event.preventDefault();

            $.ajax({
                url: '@Url.Action("Create", "Room")',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#createRoomModal').modal('hide');
                        location.reload();
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error("An unexpected error occurred.");
                }
            });
        });

        // AJAX form submission for Edit Room
        $(document).on("submit", "#editRoomForm", function (event) {
            event.preventDefault();

            $.ajax({
                url: '@Url.Action("Edit", "Room")',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#editRoomModal').modal('hide');
                        location.reload();
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error("An unexpected error occurred.");
                }
            });
        });

        // AJAX form submission for Delete Room
        $(document).on("submit", "#deleteRoomForm", function (event) {
            event.preventDefault(); // Prevent the default form submission

            $.ajax({
                url: '@Url.Action("SoftDelete", "Room")', // Soft delete action
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message); // Show success message
                        $('#deleteRoomModal').modal('hide'); // Hide the modal
                        location.reload(); // Refresh the page or update the list dynamically
                    } else {
                        toastr.error(response.message); // Show error message
                    }
                },
                error: function () {
                    toastr.error("An unexpected error occurred.");
                }
            });
        });


        // Display success/error messages from TempData if available
        var successMessage = '@TempData["SuccessMessage"]';
        if (successMessage) {
            toastr.success(successMessage);
        }
        var errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            toastr.error(errorMessage);
        }
    </script>
}
